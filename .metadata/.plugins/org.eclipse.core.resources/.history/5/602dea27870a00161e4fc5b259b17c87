package com.example.bluetoothtest;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Set;

import android.app.Activity;
import android.app.AlertDialog;
import android.bluetooth.BluetoothAdapter;
import android.bluetooth.BluetoothDevice;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.widget.ArrayAdapter;
import android.widget.ListView;

public class MainActivity extends Activity {

	private BluetoothAdapter blueAdapter;
	private ArrayAdapter<String> adapter;  
	private List<String> deviceList=new ArrayList<String>();  
	private ListView   deviceListView;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		setBluetooth();
	}
	
	private void initView(){
		deviceListView = (ListView) findViewById(R.id)
	}

	private void setBluetooth() {
		// 获取蓝牙适配器
		blueAdapter = BluetoothAdapter.getDefaultAdapter();
		// 检查是否获得
		if (blueAdapter != null) {
			// 获得蓝牙，蓝牙没有开启，则请求开启
			if (!blueAdapter.isEnabled()) {
				Intent intent = new Intent(
						BluetoothAdapter.ACTION_REQUEST_ENABLE);
				startActivityForResult(intent, RESULT_FIRST_USER);
				// 使蓝牙设备可见，方便配对
				Intent in = new Intent(
						BluetoothAdapter.ACTION_REQUEST_DISCOVERABLE);
				in.putExtra(BluetoothAdapter.EXTRA_DISCOVERABLE_DURATION, 200);
				startActivity(in);
				// 直接开启，不经过提示
				blueAdapter.enable();
			}
		} else {
			// 设备不支持蓝牙,显示弹出框提醒用户
			AlertDialog.Builder dialog = new AlertDialog.Builder(this);
			dialog.setTitle("No bluetooth devices");
			dialog.setMessage("Your equipment does not support bluetooth, please change device");
			dialog.setNegativeButton("cancel",
					new DialogInterface.OnClickListener() {
						@Override
						public void onClick(DialogInterface dialog, int which) {

						}
					});
			dialog.show();
		}
	}
	
    private void findAvalibleDevice(){  
        //获取可配对蓝牙设备  
        Set<BluetoothDevice> device=blueAdapter.getBondedDevices();  
         
        if(blueAdapter!=null&&blueAdapter.isDiscovering()){  
            deviceList.clear();  
            adapter.notifyDataSetChanged();  
        }  
        if(device.size()>0){ //存在已经配对过的蓝牙设备  
            for(Iterator<BluetoothDevice> it=device.iterator();it.hasNext();){  
                BluetoothDevice btd=it.next();  
                deviceList.add(btd.getName()+'\n'+btd.getAddress());  
                 adapter.notifyDataSetChanged();             }  
      }else{  //不存在已经配对过的蓝牙设备  
             deviceList.add("No can be matched to use bluetooth");  
             adapter.notifyDataSetChanged();  
         }  
    }  


}
